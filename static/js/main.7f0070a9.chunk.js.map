{"version":3,"sources":["icons/information-info-svgrepo-com.svg","index.js"],"names":["module","exports","SearchElement","handleSearchElementChange","searchElement","input","value","props","onChangeHandler","className","ref","onChange","this","placeholder","React","Component","Help","data-tip","src","infoIcon","alt","html","MoreInfo","Element","mainClassName","symbol","name","atomicmass","number","bgcolor","visibility","style","phase","appearance","category","density","boil","melt","discoveredBy","namedBy","onTouchStart","onMouseEnterHandler","onTouchEnd","e","preventDefault","onMouseEnter","onMouseLeave","onMouseLeaveHandler","onMouseDown","onMouseDownHandler","onDoubleClick","source","window","open","disable","gridColumn","xpos","gridRow","ypos","pointerEvents","PeriodicTable","handleSearchElement","search","setState","searchValue","filteredElement","data","elements","find","element","toLowerCase","includes","atomic_mass","colorCode","discovered_by","named_by","bind","state","focusElement","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f0070a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/information-info-svgrepo-com.c7d65a4e.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport data from './data/PeriodicTableJSON.json';\r\nimport infoIcon from './icons/information-info-svgrepo-com.svg';\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nclass SearchElement extends React.Component{\r\n    handleSearchElementChange = () => {\r\n        var searchElement = this.input.value;\r\n        this.props.onChangeHandler(searchElement);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <div className=\"search-element\">\r\n                    <span>Search for element:</span>\r\n                    <input \r\n                        ref={\r\n                            (ref) => this.input = ref\r\n                        }\r\n                        onChange={this.handleSearchElementChange}\r\n                        placeholder=\"Search by name\"\r\n                        ></input>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Help(props) {\r\n    const instructions =\"<b>Click:</b> Focus the clicked element in order to prevent accidentaly hover on other elements <br> <b>Double Click:</b> Opens the wikipedia source website \";\r\n\r\n    return(\r\n        <>\r\n            <img data-tip={instructions} className=\"info-icon\" src={infoIcon} alt=\"Info\"/>\r\n            <ReactTooltip html={true} className=\"tooltip\"/>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction MoreInfo(props) {\r\n    return(\r\n        <>\r\n            <Element \r\n                mainClassName= {props.symbol ? \"element-selected\" : \"\"} \r\n                symbol={props.symbol}\r\n                name={props.name}\r\n                atomicmass={props.atomicmass}\r\n                number={props.number}\r\n                bgcolor={props.bgcolor}\r\n                visibility={props.visibility}\r\n            >\r\n            </Element>\r\n            <div \r\n                className=\"more-info\"\r\n                style={{\r\n                    visibility: props.visibility,\r\n                }}\r\n            >\r\n                <div className=\"more-info-data\">\r\n                    {props.phase ? <span className=\"more-info-text\">{\"Phase: \" + props.phase}</span> : \"\"}\r\n                    {props.appearance ? <span className=\"more-info-text\">{\"Appearance: \" + props.appearance}</span> : \"\"}\r\n                    {props.category ? <span className=\"more-info-text\">{\"Category: \" + props.category}</span> : \"\"}\r\n                    {props.density ? <span className=\"more-info-text\">{\"Density: \" + props.density + \" g/L\"}</span> : \"\"}\r\n                    {props.boil ? <span className=\"more-info-text\">{\"Boiling point: \" + props.boil + \" K\"}</span> : \"\"}\r\n                    {props.melt ? <span className=\"more-info-text\">{\"Melting point: \" + props.melt + \" K\"}</span> : \"\"}\r\n                    {props.discoveredBy ? <span className=\"more-info-text\">{\"Discovered by: \" + props.discoveredBy}</span> : \"\"}\r\n                    {props.namedBy ? <span className=\"more-info-text\">{\"Named by: \" + props.namedBy}</span> : \"\"}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Element(props) {\r\n    return(\r\n        <>\r\n            <div \r\n                onTouchStart={props.onMouseEnterHandler}\r\n                onTouchEnd={e => e.preventDefault()}\r\n                onMouseEnter={props.onMouseEnterHandler}\r\n                onMouseLeave={props.onMouseLeaveHandler}\r\n                onMouseDown={props.onMouseDownHandler}\r\n                onDoubleClick={()=> props.source ? window.open(props.source, \"_blank\") : null}\r\n                className={props.mainClassName + \" \" + props.bgcolor + (props.disable ? ' disable' : '' )}\r\n                style={{\r\n                    gridColumn: props.xpos, \r\n                    gridRow: props.ypos,\r\n                    visibility: props.visibility,\r\n                    pointerEvents: props.pointerEvents,\r\n                }}>\r\n                <div className=\"element-header-container\">\r\n                    <div className=\"element-number\">{props.number}</div>\r\n                </div>\r\n                <div className=\"element-body-container\">\r\n                    <div className=\"element-symbol\">{props.symbol}</div>\r\n                    <div className=\"element-name\">{props.name}</div>\r\n                    <div className=\"element-atomic-mass\">{props.atomicmass}</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nclass PeriodicTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.colorCode = this.colorCode.bind(this);\r\n        this.state = {\r\n            symbol: null,\r\n            name: null,\r\n            atomicmass: null,\r\n            number: null,\r\n            bgcolor: \"\",\r\n            phase: \"\",\r\n            appearance: \"\",\r\n            category: \"\",\r\n            density: \"\",\r\n            boil: \"\",\r\n            melt: \"\",\r\n            discoveredBy: \"\",\r\n            namedBy: \"\",\r\n            visibility: \"hidden\",\r\n            focusElement: false,\r\n            source: null,\r\n            searchValue: \"\",\r\n        };\r\n    }\r\n\r\n    handleSearchElement = (search) => {\r\n        this.setState({searchValue: search});\r\n        let filteredElement = data.elements.find(element => element.name.toLowerCase().includes(search.toLowerCase()));\r\n        let plm = filteredElement && search ? this.setState({\r\n            symbol: filteredElement.symbol,\r\n            name: filteredElement.name,\r\n            atomicmass: filteredElement.atomic_mass,\r\n            number: filteredElement.number,\r\n            bgcolor: this.colorCode(filteredElement.category),\r\n            phase: filteredElement.phase,\r\n            appearance: filteredElement.appearance,\r\n            category: filteredElement.category,\r\n            density: filteredElement.density,\r\n            boil: filteredElement.boil,\r\n            melt: filteredElement.melt,\r\n            discoveredBy: filteredElement.discovered_by,\r\n            namedBy: filteredElement.named_by,\r\n            visibility: 'visible'\r\n        }) : this.setState({ \r\n            visibility: 'hidden'\r\n        })\r\n    }\r\n\r\n    colorCode = (category) => {\r\n        switch(true) {\r\n            case category.includes('nonmetal'):\r\n              return 'nonmetal';\r\n            case category.includes('noble gas'):\r\n              return 'noble-gas';\r\n            case category.includes('alkali metal'):\r\n              return 'alkali-metal';\r\n            case category.includes('alkaline earth metal'):\r\n                return 'alkaline-earth-metal';\r\n            case category.includes('metalloid'):\r\n                return 'metalloid';\r\n            case category.includes('post-transition metal'):\r\n                return 'post-transition-metal';\r\n            case category.includes('transition metal'):\r\n                return 'transition-metal';\r\n            case category.includes('lanthanide'):\r\n                return 'lanthanide';\r\n            case category.includes('actinide'):\r\n                return 'actinide';\r\n            default:\r\n              return 'white'\r\n          }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <Help />\r\n                <div className=\"center-box\">\r\n                    <div className=\"periodic-table\">\r\n                        <SearchElement\r\n                            onChangeHandler={this.handleSearchElement} />\r\n                        <MoreInfo\r\n                            symbol={this.state.symbol}\r\n                            name={this.state.name}\r\n                            atomicmass={this.state.atomicmass}\r\n                            number={this.state.number}\r\n                            bgcolor={this.state.bgcolor}\r\n                            phase={this.state.phase}\r\n                            appearance={this.state.appearance}\r\n                            category={this.state.category}\r\n                            density={this.state.density}\r\n                            boil={this.state.boil}\r\n                            melt={this.state.melt}\r\n                            discoveredBy={this.state.discoveredBy}\r\n                            namedBy={this.state.namedBy}\r\n                            visibility={this.state.visibility}\r\n                        />\r\n                        {data.elements.map(element =>(\r\n                            <Element \r\n                                key={element.number}\r\n                                xpos={element.xpos}\r\n                                ypos={element.ypos}\r\n                                symbol={element.symbol} \r\n                                name={element.name} \r\n                                atomicmass={element.atomic_mass} \r\n                                number={element.number}\r\n                                bgcolor={this.colorCode(element.category)}\r\n                                mainClassName=\"element\"\r\n                                pointerEvents={element.name.toLowerCase().includes(this.state.searchValue.toLowerCase()) ? 'auto' : 'none'}\r\n                                disable={element.name.toLowerCase().includes(this.state.searchValue.toLowerCase()) ? false : true }\r\n                                source={element.source}\r\n                                onMouseEnterHandler={() => !this.state.focusElement ? this.setState({\r\n                                    symbol: element.symbol,\r\n                                    name: element.name,\r\n                                    atomicmass: element.atomic_mass,\r\n                                    number: element.number,\r\n                                    bgcolor: this.colorCode(element.category),\r\n                                    phase: element.phase,\r\n                                    appearance: element.appearance,\r\n                                    category: element.category,\r\n                                    density: element.density,\r\n                                    boil: element.boil,\r\n                                    melt: element.melt,\r\n                                    discoveredBy: element.discovered_by,\r\n                                    namedBy: element.named_by,\r\n                                    visibility: \"visible\",\r\n                                }) : \"\"}\r\n                                onMouseLeaveHandler={() => !this.state.focusElement ? this.setState({\r\n                                    visibility: \"hidden\",\r\n                                }) : \"\"}\r\n                                onMouseDownHandler={() => this.setState({\r\n                                    focusElement: !this.state.focusElement,\r\n                                })}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <PeriodicTable />,\r\n    document.getElementById('root')\r\n  );"],"sourceRoot":""}